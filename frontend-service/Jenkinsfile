def tag="razvan95"
def imageName="dummy-frontend-service"
def imageTag="1.0"

podTemplate(containers: [
    containerTemplate(
        name: "docker",
        image: "docker",
        command: "cat",
        ttyEnabled: true,
        resourceRequestCpu: '400m',
        resourceLimitCpu: '500m',
        resourceRequestMemory: '400Mi',
        resourceLimitMemory: '500Mi'
    )
    ],
    volumes: [
        hostPathVolume(hostPath: "/var/run/docker.sock", mountPath: "/var/run/docker.sock")
    ],
){
    node(POD_LABEL) {
        stage("Git clone") {
            git "https://github.com/RazvanSebastian/Kubernetes_Microservices_Demo.git"
            sh "ls frontend-service -l"
        }
        stage("Docker container stage"){
            container("docker"){
                stage("Build image"){
                    imageBuild(imageName, imageTag)
                }
                stage("Push image"){
                    withCredentials([usernamePassword(credentialsId: "dockerhub", usernameVariable: "username", passwordVariable: "password")]) {
			            pushToImage(imageName, imageTag, USERNAME, PASSWORD)
                    }
                }
                stage("Push image"){
                    withCredentials([usernamePassword(credentialsId: "dockerhub", usernameVariable: "username", passwordVariable: "password")]) {
                        pushToImage(imageName, imageTag, USERNAME, PASSWORD)
                    }
                }
            }
        }
		stage("Kubernetes deploy"){
			sshagent (credentials: ['k8s-sshAgent']) {
				sh 'ssh -o StrictHostKeyChecking=no k8s-user@192.168.1.101 /home/k8s-deplyoment-files/web-apps/deployment-dummy-frontend-service.sh'
			}
		}
    }
}

def imageBuild(imageName, tag){
    sh "docker build -t ${imageName}:${tag} --file frontend-service/Dockerfile ."
}

def pushToImage(imageName, tag, dockerUser, dockerPassword){
    sh "docker login -u ${dockerUser} -p ${dockerPassword}"
    sh "docker tag ${imageName}:${tag} ${dockerUser}/${imageName}:${tag}"
    sh "docker push ${dockerUser}/${imageName}:${tag}"
    echo "Image push complete"
}
